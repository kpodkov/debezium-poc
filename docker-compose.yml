version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      #      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  kafka-connect:
    image: 'quay.io/debezium/connect:2.1'
    container_name: kafka-connect
    depends_on:
      - kafka
    ports:
      - '8083:8083'
    environment:
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - kafka-network

  mysql:
    image: 'quay.io/debezium/example-mysql:2.1'
    container_name: mysql
    hostname: mysql
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    networks:
      - kafka-network

  postgres:
    image: 'postgres:13.1'
    container_name: postgres
    hostname: postgres
    volumes:
      - "${PWD}/resources/ddl.sql:/sql/ddl.sql"
      - "${PWD}/resources/dml_insert.sql:/sql/dml_insert.sql"
      - "${PWD}/resources/dml_update.sql:/sql/dml_update.sql"
      - "${PWD}/resources/postgresql.conf:/etc/postgresql/postgresql.conf"
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - kafka-network

networks:
  kafka-network: